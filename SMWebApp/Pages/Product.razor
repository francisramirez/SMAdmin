@page "/products"
@inject IViewProductsUseCase _viewProductsUseCase
@inject IRemoveProductUseCase _removeProductUseCase
@inject NavigationManager _navigationManager
@using UseCases.Models;

<h3>Manage Products</h3>

@if (this.products != null)
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Product</th>
                <th>Category</th>
                <th>Supplier</th>
                <th class="text-center">Quantity</th>
                <th class="text-center">Unit Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in this.products)
            {
            <tr>
                <td>
                    @product.Name
                </td>
                <td>
                    @product.CategoryName
                </td>
                <td>
                    @product.SupplierName
                </td>
                <td class="text-center">
                    @product.Quantity
                </td>
                <td class="text-center">
                    @(Math.Round(product.UnitPrice,2))
                </td>
                <td>
                    <button type="button" class="btn btn-link" @onclick="(() => OnEditProduct(product.ProductId))">Edit</button>
                    <button type="button" class="btn btn-link" @onclick="(() => OnRemoveProduct(product.ProductId))">Remove</button>
                </td>
            </tr>

            }
        </tbody>
    </table>

}
<br />
<button class="btn btn-primary" @onclick="OnClickAddProduct">Add Product</button>


@code {
   
    private List<ProductListModel> products;

    protected override void OnInitialized() => LoadProducts();

    void LoadProducts() => this.products = this._viewProductsUseCase.Execute();


    public void OnClickAddProduct()
    {
        _navigationManager.NavigateTo("/addproduct");
    }
    public void OnEditProduct(int productId)
    {
        _navigationManager.NavigateTo($"/editproduct/{productId}");
    }
    public void OnRemoveProduct(int productId)
    {
        _removeProductUseCase.RemoveProduct(productId);
        LoadProducts();
    }
}
